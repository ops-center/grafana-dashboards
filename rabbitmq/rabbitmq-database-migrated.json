{
  "kind": "Dashboard",
  "metadata": {
    "name": "ohrdrabbitmq",
    "createdAt": "0001-01-01T00:00:00Z",
    "updatedAt": "0001-01-01T00:00:00Z",
    "version": 0,
    "project": "pp"
  },
  "spec": {
    "display": {
      "name": "KubeDB / RabbitMQ / Database"
    },
    "variables": [
      {
        "kind": "ListVariable",
        "spec": {
          "display": {
            "name": "Datasource",
            "hidden": false
          },
          "defaultValue": "default",
          "allowAllValue": false,
          "allowMultiple": false,
          "plugin": {
            "kind": "DatasourceVariable",
            "spec": {
              "datasourcePluginKind": "PrometheusDatasource"
            }
          },
          "name": "datasource"
        }
      },
      {
        "kind": "ListVariable",
        "spec": {
          "display": {
            "name": "Namespace",
            "hidden": false
          },
          "defaultValue": "rabbit",
          "allowAllValue": false,
          "allowMultiple": false,
          "sort": "none",
          "plugin": {
            "kind": "PrometheusLabelValuesVariable",
            "spec": {
              "labelName": "namespace",
              "matchers": [
                "kube_namespace_created"
              ]
            }
          },
          "name": "namespace"
        }
      },
      {
        "kind": "ListVariable",
        "spec": {
          "display": {
            "hidden": false
          },
          "defaultValue": "rabbit-dev",
          "allowAllValue": false,
          "allowMultiple": false,
          "sort": "none",
          "plugin": {
            "kind": "PrometheusLabelValuesVariable",
            "spec": {
              "labelName": "rabbitmq_cluster",
              "matchers": [
                "rabbitmq_identity_info{namespace=\"$namespace\"}"
              ]
            }
          },
          "name": "app"
        }
      }
    ],
    "panels": {
      "0_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Queues"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#fa6400",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_queues * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Publishers"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#fa6400",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_global_publishers * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Connections"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#fa6400",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "sum(rabbitmq_connections * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_3": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Ready messages"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#37872D",
                    "value": 0
                  },
                  {
                    "color": "#1F60C4",
                    "value": 10000
                  },
                  {
                    "color": "#C4162A",
                    "value": 100000
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "sum(rabbitmq_queue_messages_ready * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_4": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Incoming messages / s"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#C4162A",
                    "value": 0
                  },
                  {
                    "color": "#37872d",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "sum(rate(rabbitmq_global_messages_received_total[60s]) * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_5": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Nodes"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#fa6400",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_build_info * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_6": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Consumers"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#fa6400",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_consumers * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_7": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Channels"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#fa6400",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_channels * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_8": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Unacknowledged messages"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#37872D",
                    "value": 0
                  },
                  {
                    "color": "#1F60C4",
                    "value": 100
                  },
                  {
                    "color": "#C4162A",
                    "value": 500
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_queue_messages_unacked * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "0_9": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Outgoing messages / s"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "mappings": [
                {
                  "kind": "Misc",
                  "spec": {
                    "result": {
                      "value": "N/A"
                    },
                    "value": "null"
                  }
                }
              ],
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#C4162A",
                    "value": 0
                  },
                  {
                    "color": "#37872d",
                    "value": 0
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_redelivered_total[60s]) * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_global_messages_delivered_consume_auto_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_global_messages_delivered_consume_manual_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_global_messages_delivered_get_auto_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_global_messages_delivered_get_manual_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "1_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "empty"
          },
          "plugin": {
            "kind": "Table",
            "spec": {
              "columnSettings": [
                {
                  "name": "rabbitmq_cluster"
                },
                {
                  "name": "pod"
                },
                {
                  "name": "rabbitmq_node"
                },
                {
                  "name": "container"
                },
                {
                  "name": "service"
                },
                {
                  "name": "instance"
                },
                {
                  "name": "endpoint"
                },
                {
                  "header": "RabbitMQ Version",
                  "name": "rabbitmq_version"
                },
                {
                  "header": "Prometheus Plugin Version",
                  "name": "prometheus_plugin_version"
                },
                {
                  "header": "Prometheus client Version",
                  "name": "prometheus_client_version"
                },
                {
                  "header": "Erlang Version",
                  "name": "erlang_version"
                },
                {
                  "header": "Erlang/OTP",
                  "name": "erlang_version"
                },
                {
                  "header": "RabbitMQ",
                  "name": "rabbitmq_version"
                },
                {
                  "header": "Host",
                  "name": "instance"
                },
                {
                  "header": "Node name",
                  "name": "rabbitmq_node"
                },
                {
                  "name": "timestamp"
                },
                {
                  "name": "value"
                },
                {
                  "name": "job"
                },
                {
                  "header": "Cluster",
                  "name": "rabbitmq_cluster"
                },
                {
                  "header": "prometheus.erl",
                  "name": "prometheus_client_version"
                },
                {
                  "header": "rabbitmq_prometheus",
                  "name": "prometheus_plugin_version"
                },
                {
                  "name": "RabbitMQ Version",
                  "width": 132
                },
                {
                  "name": "Prometheus Plugin Version",
                  "width": 184
                },
                {
                  "name": "Prometheus client Version",
                  "width": 185
                }
              ],
              "transforms": [
                {
                  "kind": "MergeSeries",
                  "spec": {}
                }
              ]
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "datasource": {
                      "kind": "PrometheusDatasource",
                      "name": "${datasource}"
                    },
                    "minStep": "",
                    "query": "rabbitmq_build_info * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}",
                    "seriesNameFormat": ""
                  }
                }
              }
            }
          ]
        }
      },
      "1_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Memory available before publishers blocked",
            "description": "If the value is zero or less, the memory alarm will be triggered and all publishing connections across all cluster nodes will be blocked.\n\nThis value can temporarily go negative because the memory alarm is triggered with a slight delay.\n\nThe kernel's view of the amount of memory used by the node can differ from what the node itself can observe. This means that this value can be negative for a sustained period of time.\n\nBy default nodes use resident set size (RSS) to compute how much memory they use. This strategy can be changed (see the guides below).\n\n* [Alarms](https://www.rabbitmq.com/alarms.html)\n* [Memory Alarms](https://www.rabbitmq.com/memory.html)\n* [Reasoning About Memory Use](https://www.rabbitmq.com/memory-use.html)\n* [Blocked Connection Notifications](https://www.rabbitmq.com/connection-blocked.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 1,
                  "unit": "bytes"
                }
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(rabbitmq_resident_memory_limit_bytes * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) -\n(rabbitmq_process_resident_memory_bytes * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "1_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Disk space available before publishers blocked",
            "description": "This metric is reported for the partition where the RabbitMQ data directory is stored.\n\nIf the value is zero or less, the disk alarm will be triggered and all publishing connections across all cluster nodes will be blocked.\n\nThis value can temporarily go negative because the free disk space alarm is triggered with a slight delay.\n\n* [Alarms](https://www.rabbitmq.com/alarms.html)\n* [Disk Space Alarms](https://www.rabbitmq.com/disk-alarms.html)\n* [Disk Space](https://www.rabbitmq.com/production-checklist.html#resource-limits-disk-space)\n* [Persistence Configuration](https://www.rabbitmq.com/persistence-conf.html)\n* [Blocked Connection Notifications](https://www.rabbitmq.com/connection-blocked.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 1,
                  "unit": "bytes"
                }
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "rabbitmq_disk_space_available_bytes * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "1_3": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "File descriptors available",
            "description": "When this value reaches zero, new connections will not be accepted and disk write operations may fail.\n\nClient libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.\n\n* [Open File Handles Limit](https://www.rabbitmq.com/production-checklist.html#resource-limits-file-handle-limit)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                }
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(rabbitmq_process_max_fds * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_fds * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "1_4": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "TCP sockets available",
            "description": "When this value reaches zero, new connections will not be accepted.\n\nClient libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.\n\n* [Networking and RabbitMQ](https://www.rabbitmq.com/networking.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                }
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(rabbitmq_process_max_tcp_sockets * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "2_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages ready to be delivered to consumers",
            "description": "Total number of ready messages ready to be delivered to consumers.\n\nAim to keep this value as low as possible. RabbitMQ behaves best when messages are flowing through it. It's OK for publishers to occasionally outpace consumers, but the expectation is that consumers will eventually process all ready messages.\n\nIf this metric keeps increasing, your system will eventually run out of memory and/or disk space. Consider using TTL or Queue Length Limit to prevent unbounded message growth.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Consumers](https://www.rabbitmq.com/consumers.html)\n* [Queue Length Limit](https://www.rabbitmq.com/maxlength.html)\n* [Time-To-Live and Expiration](https://www.rabbitmq.com/ttl.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_queue_messages_ready * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "2_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages pending consumer acknowledgement",
            "description": "The total number of messages that are either in-flight to consumers, currently being processed by consumers or simply waiting for the consumer acknowledgements to be processed by the queue. Until the queue processes the message acknowledgement, the message will remain unacknowledged.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Confirms and Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rabbitmq_queue_messages_unacked * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "3_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages published / s",
            "description": "The incoming message rate before any routing rules are applied.\n\nIf this value is lower than the number of messages published to queues, it may indicate that some messages are delivered to more than one queue.\n\nIf this value is higher than the number of messages published to queues, messages cannot be routed and will either be dropped or returned to publishers.\n\n* [Publishers](https://www.rabbitmq.com/publishers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_received_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "3_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages confirmed to publishers / s",
            "description": "The rate of messages confirmed by the broker to publishers. Publishers must opt-in to receive message confirmations.\n\nIf this metric is consistently at zero it may suggest that publisher confirms are not used by clients. The safety of published messages is likely to be at risk.\n\n* [Publisher Confirms](https://www.rabbitmq.com/confirms.html#publisher-confirms)\n* [Publisher Confirms and Data Safety](https://www.rabbitmq.com/publishers.html#data-safety)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_confirmed_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "3_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages routed to queues / s",
            "description": "The rate of messages received from publishers and successfully routed to the master queue replicas.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Publishers](https://www.rabbitmq.com/publishers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_routed_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "3_3": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages unconfirmed to publishers / s",
            "description": "The rate of messages received from publishers that have publisher confirms enabled and the broker has not confirmed yet.\n\n* [Publishers](https://www.rabbitmq.com/publishers.html)\n* [Confirms and Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_received_confirm_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"} - \nrate(rabbitmq_global_messages_confirmed_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}\n) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "3_4": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Unroutable messages dropped / s",
            "description": "The rate of messages that cannot be routed and are dropped. \n\nAny value above zero means message loss and likely suggests a routing problem on the publisher end.\n\n* [Unroutable Message Handling](https://www.rabbitmq.com/publishers.html#unroutable)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_unroutable_dropped_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "3_5": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Unroutable messages returned to publishers / s",
            "description": "The rate of messages that cannot be routed and are returned back to publishers.\n\nSustained values above zero may indicate a routing problem on the publisher end.\n\n* [Unroutable Message Handling](https://www.rabbitmq.com/publishers.html#unroutable)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_unroutable_returned_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages delivered / s",
            "description": "The rate of messages delivered to consumers. It includes messages that have been redelivered.\n\nThis metric does not include messages that have been fetched by consumers using `basic.get` (consumed by polling).\n\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(\n  (rate(rabbitmq_global_messages_delivered_consume_auto_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) +\n  (rate(rabbitmq_global_messages_delivered_consume_manual_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages redelivered / s",
            "description": "The rate of messages that have been redelivered to consumers. It includes messages that have been requeued automatically and redelivered due to channel exceptions or connection closures.\n\nHaving some redeliveries is expected, but if this metric is consistently non-zero, it is worth investigating why.\n\n* [Negative Acknowledgement and Requeuing of Deliveries](https://www.rabbitmq.com/confirms.html#consumer-nacks-requeue)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_redelivered_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages delivered with manual ack / s",
            "description": "The rate of message deliveries to consumers that use manual acknowledgement mode.\n\nWhen this mode is used, RabbitMQ waits for consumers to acknowledge messages before more messages can be delivered.\n\nThis is the safest way of consuming messages.\n\n* [Consumer Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_delivered_consume_manual_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_3": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages delivered auto ack / s",
            "description": "The rate of message deliveries to consumers that use automatic acknowledgement mode.\n\nWhen this mode is used, RabbitMQ does not wait for consumers to acknowledge message deliveries.\n\nThis mode is fire-and-forget and does not offer any delivery safety guarantees. It tends to provide higher throughput and it may lead to consumer overload  and higher consumer memory usage.\n\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_delivered_consume_auto_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_4": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Messages acknowledged / s",
            "description": "The rate of message acknowledgements coming from consumers that use manual acknowledgement mode.\n\n* [Consumer Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "decimalPlaces": 0,
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_acknowledged_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_5": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Polling operations with auto ack / s",
            "description": "The rate of messages delivered to polling consumers that use automatic acknowledgement mode.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_delivered_get_auto_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_6": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Polling operations that yield no result / s",
            "description": "The rate of polling consumer operations that yield no result.\n\nAny value above zero means that RabbitMQ resources are wasted by polling consumers.\n\nCompare this metric to the other polling consumer metrics to see the inefficiency rate.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_get_empty_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "4_7": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Polling operations with manual ack / s",
            "description": "The rate of messages delivered to polling consumers that use manual acknowledgement mode.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_global_messages_delivered_get_manual_ack_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "5_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Total queues",
            "description": "Total number of queue masters  per node. \n\nThis metric makes it easy to see sub-optimal queue distribution in a cluster.\n\n* [Queue Masters, Data Locality](https://www.rabbitmq.com/ha.html#master-migration-data-locality)\n* [Queues](https://www.rabbitmq.com/queues.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "rabbitmq_queues * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "5_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Queues declared / s",
            "description": "The rate of queue declarations performed by clients.\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_queues_declared_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "5_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Queues created / s",
            "description": "The rate of new queues created (as opposed to redeclarations).\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_queues_created_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "5_3": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Queues deleted / s",
            "description": "The rate of queues deleted.\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_queues_deleted_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "6_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Log entries committed / s",
            "description": "##### Rate of Raft log operations committed\n\nThis includes all queue operations, including publishes & consumer acknowledgements.\n\nThis tracks the progress of the Raft commit index on all members, including followers.\n\nIf a RabbitMQ node does not run a Raft member, it will not report any entries committed."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "table",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "sum"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_raft_log_commit_index[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "6_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Log entry commit latency",
            "description": "##### Time for a log entry to be committed\n\nThis is an indicator of Raft operational overhead. Values will increase with increased load as the system trades latency for throughput.\n\nThis metric samples  the time it takes for a log entry to be written to a Raft log and that entry being committed.\n\nBecause quorum queues fsync all operations to disk before committing them, they are not suitable for low-latency workloads."
          },
          "plugin": {
            "kind": "Markdown",
            "spec": {
              "text": "**Migration from Grafana not supported !**"
            }
          }
        }
      },
      "6_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Uncommitted log entries",
            "description": "##### Pending Raft log entries\n\nTracks the number of Raft log entries that have been written but not yet committed.\n\nHigh & growing values may be indicative of a quorum of members not being available so that a queue can make progress."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "table",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "sum"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                }
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(\n  (rabbitmq_raft_log_last_written_index * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) -\n  (rabbitmq_raft_log_commit_index * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "6_3": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Leader elections / s",
            "description": "##### Rate of Raft leader elections\n\nTracks the increments of the Raft term.\n\nSustained non-zero rates are indicative of network and/or availability issues, or queue churn. The other reason may be quorum queue declarations.\n\nValues above 0 are normal, some leader elections are expected. Sustained high values may be of concern."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "table",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "sum"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": true,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_raft_term_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "6_4": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Raft members with >5k entries in the log",
            "description": "##### Number of entries in the Raft log\n\nTracks the number of Raft log entries since the last snapshot.\n\nLarge values can either be indicative of large quorum queue backlogs or availability problems. If the uncommitted entries metric is large as well, there is a genuine availability problem in the system."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "table",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "sum"
                ]
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": false,
                "display": "line",
                "lineStyle": "solid",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(\n  (rabbitmq_raft_log_last_written_index * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) - \n  (rabbitmq_raft_log_snapshot_index * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"})\n) by(queue, rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}} {{queue}}"
                  }
                }
              }
            }
          ]
        }
      },
      "7_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Total channels",
            "description": "Total number of channels on all currently opened connections.\n\nIf this metric grows monotonically it is highly likely a channel leak in one of the applications. Confirm channel leaks by using the _Channels opened_ and _Channels closed_ metrics.\n\n* [Channel Leak](https://www.rabbitmq.com/channels.html#channel-leaks)\n* [Channels](https://www.rabbitmq.com/channels.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "rabbitmq_channels * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "7_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Channels opened / s",
            "description": "The rate of new channels opened by applications across all connections. Channels are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of channel churn or mass connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [High Channel Churn](https://www.rabbitmq.com/channels.html#high-channel-churn)\n* [Channels](https://www.rabbitmq.com/channels.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_channels_opened_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "7_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Channels closed / s",
            "description": "The rate of channels closed by applications across all connections. Channels are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of channel churn or mass connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [High Channel Churn](https://www.rabbitmq.com/channels.html#high-channel-churn)\n* [Channels](https://www.rabbitmq.com/channels.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_channels_closed_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "8_0": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Total connections",
            "description": "Total number of client connections.\n\nIf this metric grows monotonically it is highly likely a connection leak in one of the applications. Confirm connection leaks by using the _Connections opened_ and _Connections closed_ metrics.\n\n* [Connection Leak](https://www.rabbitmq.com/connections.html#monitoring)\n* [Connections](https://www.rabbitmq.com/connections.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "rabbitmq_connections * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "8_1": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Connections opened / s",
            "description": "The rate of new connections opened by clients. Connections are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of connection churn or mass connection recovery.\n\n* [Connection Leak](https://www.rabbitmq.com/connections.html#monitoring)\n* [Connections](https://www.rabbitmq.com/connections.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "8_2": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Connections closed / s",
            "description": "The rate of connections closed. Connections are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of connection churn or mass connection recovery.\n\n* [Connections](https://www.rabbitmq.com/connections.html)"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "mode": "list",
                "position": "bottom",
                "values": [
                  "last-number",
                  "max",
                  "min"
                ]
              },
              "visual": {
                "areaOpacity": 1,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1
              },
              "yAxis": {
                "format": {
                  "unit": "decimal"
                },
                "min": 0
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance, job) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$app\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "seriesNameFormat": "{{rabbitmq_node}}"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "layouts": [
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "MESSAGING",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 1,
              "width": 4,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_0"
              }
            },
            {
              "x": 4,
              "y": 1,
              "width": 4,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_1"
              }
            },
            {
              "x": 8,
              "y": 1,
              "width": 4,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_2"
              }
            },
            {
              "x": 12,
              "y": 1,
              "width": 6,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_3"
              }
            },
            {
              "x": 18,
              "y": 1,
              "width": 6,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_4"
              }
            },
            {
              "x": 0,
              "y": 4,
              "width": 4,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_5"
              }
            },
            {
              "x": 4,
              "y": 4,
              "width": 4,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_6"
              }
            },
            {
              "x": 8,
              "y": 4,
              "width": 4,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_7"
              }
            },
            {
              "x": 12,
              "y": 4,
              "width": 6,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_8"
              }
            },
            {
              "x": 18,
              "y": 4,
              "width": 6,
              "height": 3,
              "content": {
                "$ref": "#/spec/panels/0_9"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "NODES",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 8,
              "width": 24,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/1_0"
              }
            },
            {
              "x": 0,
              "y": 13,
              "width": 12,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/1_1"
              }
            },
            {
              "x": 12,
              "y": 13,
              "width": 8,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/1_2"
              }
            },
            {
              "x": 20,
              "y": 13,
              "width": 4,
              "height": 4,
              "content": {
                "$ref": "#/spec/panels/1_3"
              }
            },
            {
              "x": 20,
              "y": 17,
              "width": 4,
              "height": 4,
              "content": {
                "$ref": "#/spec/panels/1_4"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "QUEUED MESSAGES",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 22,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/2_0"
              }
            },
            {
              "x": 12,
              "y": 22,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/2_1"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "INCOMING MESSAGES",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 28,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/3_0"
              }
            },
            {
              "x": 12,
              "y": 28,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/3_1"
              }
            },
            {
              "x": 0,
              "y": 33,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/3_2"
              }
            },
            {
              "x": 12,
              "y": 33,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/3_3"
              }
            },
            {
              "x": 0,
              "y": 38,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/3_4"
              }
            },
            {
              "x": 12,
              "y": 38,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/3_5"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "OUTGOING MESSAGES",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 44,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_0"
              }
            },
            {
              "x": 12,
              "y": 44,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_1"
              }
            },
            {
              "x": 0,
              "y": 49,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_2"
              }
            },
            {
              "x": 12,
              "y": 49,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_3"
              }
            },
            {
              "x": 0,
              "y": 54,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_4"
              }
            },
            {
              "x": 12,
              "y": 54,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_5"
              }
            },
            {
              "x": 0,
              "y": 59,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_6"
              }
            },
            {
              "x": 12,
              "y": 59,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/4_7"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "QUEUES",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 65,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/5_0"
              }
            },
            {
              "x": 12,
              "y": 65,
              "width": 4,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/5_1"
              }
            },
            {
              "x": 16,
              "y": 65,
              "width": 4,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/5_2"
              }
            },
            {
              "x": 20,
              "y": 65,
              "width": 4,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/5_3"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "RAFT STATES FOR QUORUM QUEUES",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 71,
              "width": 12,
              "height": 9,
              "content": {
                "$ref": "#/spec/panels/6_0"
              }
            },
            {
              "x": 12,
              "y": 71,
              "width": 12,
              "height": 9,
              "content": {
                "$ref": "#/spec/panels/6_1"
              }
            },
            {
              "x": 0,
              "y": 80,
              "width": 12,
              "height": 9,
              "content": {
                "$ref": "#/spec/panels/6_2"
              }
            },
            {
              "x": 12,
              "y": 80,
              "width": 12,
              "height": 9,
              "content": {
                "$ref": "#/spec/panels/6_3"
              }
            },
            {
              "x": 0,
              "y": 89,
              "width": 24,
              "height": 10,
              "content": {
                "$ref": "#/spec/panels/6_4"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "CHANNELS",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 100,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/7_0"
              }
            },
            {
              "x": 12,
              "y": 100,
              "width": 6,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/7_1"
              }
            },
            {
              "x": 18,
              "y": 100,
              "width": 6,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/7_2"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "CONNECTIONS",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 106,
              "width": 12,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/8_0"
              }
            },
            {
              "x": 12,
              "y": 106,
              "width": 6,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/8_1"
              }
            },
            {
              "x": 18,
              "y": 106,
              "width": 6,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/8_2"
              }
            }
          ]
        }
      }
    ],
    "duration": "1h"
  }
}